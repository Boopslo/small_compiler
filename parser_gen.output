Terminals which are not used

   CHARS


State 95 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: _DeclList DeclList
    3         | /* empty */

    4 _DeclList: Type ID SEMI
    5          | Type ID LS DIGITS RS SEMI
    6          | Type ID FunDecl

    7 VarDecl: Type ID SEMI
    8        | Type ID LS DIGITS RS SEMI

    9 FunDecl: LP ParamDeclList RP Block

   10 VarDeclList: VarDecl VarDeclList
   11            | VarDecl

   12 ParamDeclList: ParamDeclListTail
   13              | /* empty */

   14 ParamDeclListTail: ParamDecl COMMA ParamDeclListTail
   15                  | ParamDecl

   16 ParamDecl: Type ID
   17          | Type ID LS RS

   18 Block: LB VarDeclList StmtList RB
   19      | LB StmtList RB

   20 Type: INT
   21     | CHAR

   22 StmtList: Stmt StmtList
   23         | Stmt

   24 Stmt: SEMI
   25     | Expr SEMI
   26     | RETURN Expr SEMI
   27     | BREAK SEMI
   28     | IF LP Expr RP Stmt ELSE Stmt
   29     | WHILE LP Expr RP Stmt
   30     | Block
   31     | PRINT ID SEMI
   32     | READ ID SEMI

   33 ExprList: Expr
   34         | ExprList COMMA Expr

   35 Node: ID
   36     | DIGITS

   37 Expr: ID ASSIGN Expr
   38     | ID LS Expr RS BinaryOp Expr
   39     | ID LS Expr RS
   40     | ID LS Expr RS ASSIGN Expr
   41     | ID LP ExprList RP
   42     | Operation

   43 Operation: Node
   44          | LP Expr RP
   45          | Operation BinaryOp Operation
   46          | MINUS Operation
   47          | NOT Operation

   48 BinaryOp: PLUS
   49         | MINUS
   50         | MULT
   51         | DIVIDE
   52         | EQ
   53         | NE
   54         | LT
   55         | LE
   56         | GT
   57         | GE
   58         | AND
   59         | OR


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 20
CHAR (259) 21
DIGITS (260) 5 8 36
ID (261) 4 5 6 7 8 16 17 31 32 35 37 38 39 40 41
CHARS (262)
RETURN (263) 26
IF (264) 28
ELSE (265) 28
WHILE (266) 29
BREAK (267) 27
PRINT (268) 31
READ (269) 32
SEMI (270) 4 5 7 8 24 25 26 27 31 32
COMMA (271) 14 34
ASSIGN (272) 37 40
LP (273) 9 28 29 41 44
RP (274) 9 28 29 41 44
LB (275) 18 19
RB (276) 18 19
LS (277) 5 8 17 38 39 40
RS (278) 5 8 17 38 39 40
OR (279) 59
AND (280) 58
GE (281) 57
LE (282) 55
GT (283) 56
LT (284) 54
NE (285) 53
EQ (286) 52
MINUS (287) 46 49
PLUS (288) 48
DIVIDE (289) 51
MULT (290) 50
NOT (291) 47
NEG (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
Program (39)
    on left: 1, on right: 0
DeclList (40)
    on left: 2 3, on right: 1 2
_DeclList (41)
    on left: 4 5 6, on right: 2
VarDecl (42)
    on left: 7 8, on right: 10 11
FunDecl (43)
    on left: 9, on right: 6
VarDeclList (44)
    on left: 10 11, on right: 10 18
ParamDeclList (45)
    on left: 12 13, on right: 9
ParamDeclListTail (46)
    on left: 14 15, on right: 12 14
ParamDecl (47)
    on left: 16 17, on right: 14 15
Block (48)
    on left: 18 19, on right: 9 30
Type (49)
    on left: 20 21, on right: 4 5 6 7 8 16 17
StmtList (50)
    on left: 22 23, on right: 18 19 22
Stmt (51)
    on left: 24 25 26 27 28 29 30 31 32, on right: 22 23 28 29
ExprList (52)
    on left: 33 34, on right: 34 41
Node (53)
    on left: 35 36, on right: 43
Expr (54)
    on left: 37 38 39 40 41 42, on right: 25 26 28 29 33 34 37 38 39
    40 44
Operation (55)
    on left: 43 44 45 46 47, on right: 42 45 46 47
BinaryOp (56)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59, on right: 38 45


state 0

    0 $accept: . Program $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 3 (DeclList)

    Program    go to state 3
    DeclList   go to state 4
    _DeclList  go to state 5
    Type       go to state 6


state 1

   20 Type: INT .

    $default  reduce using rule 20 (Type)


state 2

   21 Type: CHAR .

    $default  reduce using rule 21 (Type)


state 3

    0 $accept: Program . $end

    $end  shift, and go to state 7


state 4

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


state 5

    2 DeclList: _DeclList . DeclList

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 3 (DeclList)

    DeclList   go to state 8
    _DeclList  go to state 5
    Type       go to state 6


state 6

    4 _DeclList: Type . ID SEMI
    5          | Type . ID LS DIGITS RS SEMI
    6          | Type . ID FunDecl

    ID  shift, and go to state 9


state 7

    0 $accept: Program $end .

    $default  accept


state 8

    2 DeclList: _DeclList DeclList .

    $default  reduce using rule 2 (DeclList)


state 9

    4 _DeclList: Type ID . SEMI
    5          | Type ID . LS DIGITS RS SEMI
    6          | Type ID . FunDecl

    SEMI  shift, and go to state 10
    LP    shift, and go to state 11
    LS    shift, and go to state 12

    FunDecl  go to state 13


state 10

    4 _DeclList: Type ID SEMI .

    $default  reduce using rule 4 (_DeclList)


state 11

    9 FunDecl: LP . ParamDeclList RP Block

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 13 (ParamDeclList)

    ParamDeclList      go to state 14
    ParamDeclListTail  go to state 15
    ParamDecl          go to state 16
    Type               go to state 17


state 12

    5 _DeclList: Type ID LS . DIGITS RS SEMI

    DIGITS  shift, and go to state 18


state 13

    6 _DeclList: Type ID FunDecl .

    $default  reduce using rule 6 (_DeclList)


state 14

    9 FunDecl: LP ParamDeclList . RP Block

    RP  shift, and go to state 19


state 15

   12 ParamDeclList: ParamDeclListTail .

    $default  reduce using rule 12 (ParamDeclList)


state 16

   14 ParamDeclListTail: ParamDecl . COMMA ParamDeclListTail
   15                  | ParamDecl .

    COMMA  shift, and go to state 20

    $default  reduce using rule 15 (ParamDeclListTail)


state 17

   16 ParamDecl: Type . ID
   17          | Type . ID LS RS

    ID  shift, and go to state 21


state 18

    5 _DeclList: Type ID LS DIGITS . RS SEMI

    RS  shift, and go to state 22


state 19

    9 FunDecl: LP ParamDeclList RP . Block

    LB  shift, and go to state 23

    Block  go to state 24


state 20

   14 ParamDeclListTail: ParamDecl COMMA . ParamDeclListTail

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    ParamDeclListTail  go to state 25
    ParamDecl          go to state 16
    Type               go to state 17


state 21

   16 ParamDecl: Type ID .
   17          | Type ID . LS RS

    LS  shift, and go to state 26

    $default  reduce using rule 16 (ParamDecl)


state 22

    5 _DeclList: Type ID LS DIGITS RS . SEMI

    SEMI  shift, and go to state 27


state 23

   18 Block: LB . VarDeclList StmtList RB
   19      | LB . StmtList RB

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    BREAK   shift, and go to state 33
    PRINT   shift, and go to state 34
    READ    shift, and go to state 35
    SEMI    shift, and go to state 36
    LP      shift, and go to state 37
    LB      shift, and go to state 23
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    VarDecl      go to state 40
    VarDeclList  go to state 41
    Block        go to state 42
    Type         go to state 43
    StmtList     go to state 44
    Stmt         go to state 45
    Node         go to state 46
    Expr         go to state 47
    Operation    go to state 48


state 24

    9 FunDecl: LP ParamDeclList RP Block .

    $default  reduce using rule 9 (FunDecl)


state 25

   14 ParamDeclListTail: ParamDecl COMMA ParamDeclListTail .

    $default  reduce using rule 14 (ParamDeclListTail)


state 26

   17 ParamDecl: Type ID LS . RS

    RS  shift, and go to state 49


state 27

    5 _DeclList: Type ID LS DIGITS RS SEMI .

    $default  reduce using rule 5 (_DeclList)


state 28

   36 Node: DIGITS .

    $default  reduce using rule 36 (Node)


state 29

   35 Node: ID .
   37 Expr: ID . ASSIGN Expr
   38     | ID . LS Expr RS BinaryOp Expr
   39     | ID . LS Expr RS
   40     | ID . LS Expr RS ASSIGN Expr
   41     | ID . LP ExprList RP

    ASSIGN  shift, and go to state 50
    LP      shift, and go to state 51
    LS      shift, and go to state 52

    $default  reduce using rule 35 (Node)


state 30

   26 Stmt: RETURN . Expr SEMI

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 53
    Operation  go to state 48


state 31

   28 Stmt: IF . LP Expr RP Stmt ELSE Stmt

    LP  shift, and go to state 54


state 32

   29 Stmt: WHILE . LP Expr RP Stmt

    LP  shift, and go to state 55


state 33

   27 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 56


state 34

   31 Stmt: PRINT . ID SEMI

    ID  shift, and go to state 57


state 35

   32 Stmt: READ . ID SEMI

    ID  shift, and go to state 58


state 36

   24 Stmt: SEMI .

    $default  reduce using rule 24 (Stmt)


state 37

   44 Operation: LP . Expr RP

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 59
    Operation  go to state 48


state 38

   46 Operation: MINUS . Operation

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 60
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Operation  go to state 61


state 39

   47 Operation: NOT . Operation

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 60
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Operation  go to state 62


state 40

   10 VarDeclList: VarDecl . VarDeclList
   11            | VarDecl .

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 11 (VarDeclList)

    VarDecl      go to state 40
    VarDeclList  go to state 63
    Type         go to state 43


state 41

   18 Block: LB VarDeclList . StmtList RB

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    BREAK   shift, and go to state 33
    PRINT   shift, and go to state 34
    READ    shift, and go to state 35
    SEMI    shift, and go to state 36
    LP      shift, and go to state 37
    LB      shift, and go to state 23
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Block      go to state 42
    StmtList   go to state 64
    Stmt       go to state 45
    Node       go to state 46
    Expr       go to state 47
    Operation  go to state 48


state 42

   30 Stmt: Block .

    $default  reduce using rule 30 (Stmt)


state 43

    7 VarDecl: Type . ID SEMI
    8        | Type . ID LS DIGITS RS SEMI

    ID  shift, and go to state 65


state 44

   19 Block: LB StmtList . RB

    RB  shift, and go to state 66


state 45

   22 StmtList: Stmt . StmtList
   23         | Stmt .

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    BREAK   shift, and go to state 33
    PRINT   shift, and go to state 34
    READ    shift, and go to state 35
    SEMI    shift, and go to state 36
    LP      shift, and go to state 37
    LB      shift, and go to state 23
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    $default  reduce using rule 23 (StmtList)

    Block      go to state 42
    StmtList   go to state 67
    Stmt       go to state 45
    Node       go to state 46
    Expr       go to state 47
    Operation  go to state 48


state 46

   43 Operation: Node .

    $default  reduce using rule 43 (Operation)


state 47

   25 Stmt: Expr . SEMI

    SEMI  shift, and go to state 68


state 48

   42 Expr: Operation .
   45 Operation: Operation . BinaryOp Operation

    OR      shift, and go to state 69
    AND     shift, and go to state 70
    GE      shift, and go to state 71
    LE      shift, and go to state 72
    GT      shift, and go to state 73
    LT      shift, and go to state 74
    NE      shift, and go to state 75
    EQ      shift, and go to state 76
    MINUS   shift, and go to state 77
    PLUS    shift, and go to state 78
    DIVIDE  shift, and go to state 79
    MULT    shift, and go to state 80

    $default  reduce using rule 42 (Expr)

    BinaryOp  go to state 81


state 49

   17 ParamDecl: Type ID LS RS .

    $default  reduce using rule 17 (ParamDecl)


state 50

   37 Expr: ID ASSIGN . Expr

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 82
    Operation  go to state 48


state 51

   41 Expr: ID LP . ExprList RP

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    ExprList   go to state 83
    Node       go to state 46
    Expr       go to state 84
    Operation  go to state 48


state 52

   38 Expr: ID LS . Expr RS BinaryOp Expr
   39     | ID LS . Expr RS
   40     | ID LS . Expr RS ASSIGN Expr

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 85
    Operation  go to state 48


state 53

   26 Stmt: RETURN Expr . SEMI

    SEMI  shift, and go to state 86


state 54

   28 Stmt: IF LP . Expr RP Stmt ELSE Stmt

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 87
    Operation  go to state 48


state 55

   29 Stmt: WHILE LP . Expr RP Stmt

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 88
    Operation  go to state 48


state 56

   27 Stmt: BREAK SEMI .

    $default  reduce using rule 27 (Stmt)


state 57

   31 Stmt: PRINT ID . SEMI

    SEMI  shift, and go to state 89


state 58

   32 Stmt: READ ID . SEMI

    SEMI  shift, and go to state 90


state 59

   44 Operation: LP Expr . RP

    RP  shift, and go to state 91


state 60

   35 Node: ID .

    $default  reduce using rule 35 (Node)


state 61

   45 Operation: Operation . BinaryOp Operation
   46          | MINUS Operation .

    $default  reduce using rule 46 (Operation)

    BinaryOp  go to state 81


state 62

   45 Operation: Operation . BinaryOp Operation
   47          | NOT Operation .

    $default  reduce using rule 47 (Operation)

    BinaryOp  go to state 81


state 63

   10 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 10 (VarDeclList)


state 64

   18 Block: LB VarDeclList StmtList . RB

    RB  shift, and go to state 92


state 65

    7 VarDecl: Type ID . SEMI
    8        | Type ID . LS DIGITS RS SEMI

    SEMI  shift, and go to state 93
    LS    shift, and go to state 94


state 66

   19 Block: LB StmtList RB .

    $default  reduce using rule 19 (Block)


state 67

   22 StmtList: Stmt StmtList .

    $default  reduce using rule 22 (StmtList)


state 68

   25 Stmt: Expr SEMI .

    $default  reduce using rule 25 (Stmt)


state 69

   59 BinaryOp: OR .

    $default  reduce using rule 59 (BinaryOp)


state 70

   58 BinaryOp: AND .

    $default  reduce using rule 58 (BinaryOp)


state 71

   57 BinaryOp: GE .

    $default  reduce using rule 57 (BinaryOp)


state 72

   55 BinaryOp: LE .

    $default  reduce using rule 55 (BinaryOp)


state 73

   56 BinaryOp: GT .

    $default  reduce using rule 56 (BinaryOp)


state 74

   54 BinaryOp: LT .

    $default  reduce using rule 54 (BinaryOp)


state 75

   53 BinaryOp: NE .

    $default  reduce using rule 53 (BinaryOp)


state 76

   52 BinaryOp: EQ .

    $default  reduce using rule 52 (BinaryOp)


state 77

   49 BinaryOp: MINUS .

    $default  reduce using rule 49 (BinaryOp)


state 78

   48 BinaryOp: PLUS .

    $default  reduce using rule 48 (BinaryOp)


state 79

   51 BinaryOp: DIVIDE .

    $default  reduce using rule 51 (BinaryOp)


state 80

   50 BinaryOp: MULT .

    $default  reduce using rule 50 (BinaryOp)


state 81

   45 Operation: Operation BinaryOp . Operation

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 60
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Operation  go to state 95


state 82

   37 Expr: ID ASSIGN Expr .

    $default  reduce using rule 37 (Expr)


state 83

   34 ExprList: ExprList . COMMA Expr
   41 Expr: ID LP ExprList . RP

    COMMA  shift, and go to state 96
    RP     shift, and go to state 97


state 84

   33 ExprList: Expr .

    $default  reduce using rule 33 (ExprList)


state 85

   38 Expr: ID LS Expr . RS BinaryOp Expr
   39     | ID LS Expr . RS
   40     | ID LS Expr . RS ASSIGN Expr

    RS  shift, and go to state 98


state 86

   26 Stmt: RETURN Expr SEMI .

    $default  reduce using rule 26 (Stmt)


state 87

   28 Stmt: IF LP Expr . RP Stmt ELSE Stmt

    RP  shift, and go to state 99


state 88

   29 Stmt: WHILE LP Expr . RP Stmt

    RP  shift, and go to state 100


state 89

   31 Stmt: PRINT ID SEMI .

    $default  reduce using rule 31 (Stmt)


state 90

   32 Stmt: READ ID SEMI .

    $default  reduce using rule 32 (Stmt)


state 91

   44 Operation: LP Expr RP .

    $default  reduce using rule 44 (Operation)


state 92

   18 Block: LB VarDeclList StmtList RB .

    $default  reduce using rule 18 (Block)


state 93

    7 VarDecl: Type ID SEMI .

    $default  reduce using rule 7 (VarDecl)


state 94

    8 VarDecl: Type ID LS . DIGITS RS SEMI

    DIGITS  shift, and go to state 101


state 95

   45 Operation: Operation . BinaryOp Operation
   45          | Operation BinaryOp Operation .

    OR      shift, and go to state 69
    AND     shift, and go to state 70
    GE      shift, and go to state 71
    LE      shift, and go to state 72
    GT      shift, and go to state 73
    LT      shift, and go to state 74
    NE      shift, and go to state 75
    EQ      shift, and go to state 76
    MINUS   shift, and go to state 77
    PLUS    shift, and go to state 78
    DIVIDE  shift, and go to state 79
    MULT    shift, and go to state 80

    OR        [reduce using rule 45 (Operation)]
    AND       [reduce using rule 45 (Operation)]
    GE        [reduce using rule 45 (Operation)]
    LE        [reduce using rule 45 (Operation)]
    GT        [reduce using rule 45 (Operation)]
    LT        [reduce using rule 45 (Operation)]
    NE        [reduce using rule 45 (Operation)]
    EQ        [reduce using rule 45 (Operation)]
    MINUS     [reduce using rule 45 (Operation)]
    PLUS      [reduce using rule 45 (Operation)]
    DIVIDE    [reduce using rule 45 (Operation)]
    MULT      [reduce using rule 45 (Operation)]
    $default  reduce using rule 45 (Operation)

    BinaryOp  go to state 81


state 96

   34 ExprList: ExprList COMMA . Expr

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 102
    Operation  go to state 48


state 97

   41 Expr: ID LP ExprList RP .

    $default  reduce using rule 41 (Expr)


state 98

   38 Expr: ID LS Expr RS . BinaryOp Expr
   39     | ID LS Expr RS .
   40     | ID LS Expr RS . ASSIGN Expr

    ASSIGN  shift, and go to state 103
    OR      shift, and go to state 69
    AND     shift, and go to state 70
    GE      shift, and go to state 71
    LE      shift, and go to state 72
    GT      shift, and go to state 73
    LT      shift, and go to state 74
    NE      shift, and go to state 75
    EQ      shift, and go to state 76
    MINUS   shift, and go to state 77
    PLUS    shift, and go to state 78
    DIVIDE  shift, and go to state 79
    MULT    shift, and go to state 80

    $default  reduce using rule 39 (Expr)

    BinaryOp  go to state 104


state 99

   28 Stmt: IF LP Expr RP . Stmt ELSE Stmt

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    BREAK   shift, and go to state 33
    PRINT   shift, and go to state 34
    READ    shift, and go to state 35
    SEMI    shift, and go to state 36
    LP      shift, and go to state 37
    LB      shift, and go to state 23
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Block      go to state 42
    Stmt       go to state 105
    Node       go to state 46
    Expr       go to state 47
    Operation  go to state 48


state 100

   29 Stmt: WHILE LP Expr RP . Stmt

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    BREAK   shift, and go to state 33
    PRINT   shift, and go to state 34
    READ    shift, and go to state 35
    SEMI    shift, and go to state 36
    LP      shift, and go to state 37
    LB      shift, and go to state 23
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Block      go to state 42
    Stmt       go to state 106
    Node       go to state 46
    Expr       go to state 47
    Operation  go to state 48


state 101

    8 VarDecl: Type ID LS DIGITS . RS SEMI

    RS  shift, and go to state 107


state 102

   34 ExprList: ExprList COMMA Expr .

    $default  reduce using rule 34 (ExprList)


state 103

   40 Expr: ID LS Expr RS ASSIGN . Expr

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 108
    Operation  go to state 48


state 104

   38 Expr: ID LS Expr RS BinaryOp . Expr

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    LP      shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Node       go to state 46
    Expr       go to state 109
    Operation  go to state 48


state 105

   28 Stmt: IF LP Expr RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 110


state 106

   29 Stmt: WHILE LP Expr RP Stmt .

    $default  reduce using rule 29 (Stmt)


state 107

    8 VarDecl: Type ID LS DIGITS RS . SEMI

    SEMI  shift, and go to state 111


state 108

   40 Expr: ID LS Expr RS ASSIGN Expr .

    $default  reduce using rule 40 (Expr)


state 109

   38 Expr: ID LS Expr RS BinaryOp Expr .

    $default  reduce using rule 38 (Expr)


state 110

   28 Stmt: IF LP Expr RP Stmt ELSE . Stmt

    DIGITS  shift, and go to state 28
    ID      shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    BREAK   shift, and go to state 33
    PRINT   shift, and go to state 34
    READ    shift, and go to state 35
    SEMI    shift, and go to state 36
    LP      shift, and go to state 37
    LB      shift, and go to state 23
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39

    Block      go to state 42
    Stmt       go to state 112
    Node       go to state 46
    Expr       go to state 47
    Operation  go to state 48


state 111

    8 VarDecl: Type ID LS DIGITS RS SEMI .

    $default  reduce using rule 8 (VarDecl)


state 112

   28 Stmt: IF LP Expr RP Stmt ELSE Stmt .

    $default  reduce using rule 28 (Stmt)
